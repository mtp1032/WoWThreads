name: Publish to CurseForge

on:
  push:
    branches:
      - main
  workflow_dispatch: 

jobs:
  package:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Package files
        run: |
          mkdir -p package/WoWThreads
          cp -r Docs package/WoWThreads/
          cp -r Libs package/WoWThreads/
          cp -r Locales package/WoWThreads/
          cp -r Sources package/WoWThreads/
          cp LICENSE package/WoWThreads/
          cp README.md package/WoWThreads/
          cp WoWThreads.code-workspace package/WoWThreads/
          cp WoWThreads_Cata.toc package/WoWThreads/
          cp WoWThreads_Mainline.toc package/WoWThreads/
          cp WoWThreads_Vanilla.toc package/WoWThreads/
          cd package
          zip -r ../WoWThreads.zip WoWThreads

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: WoWThreads
          path: WoWThreads.zip

  publish:
    needs: package
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: WoWThreads
          path: ./WoWThreads

      - name: Rename downloaded directory to ZIP
        run: |
          mv WoWThreads/WoWThreads.zip WoWThreads.zip

      - name: Print working directory
        run: pwd

      - name: List files in working directory
        run: ls -la

      - name: Check existence of ZIP file
        run: |
          if [ ! -f "WoWThreads.zip" ]; then
            echo "WoWThreads.zip not found"
            exit 1
          fi

      - name: Upload to CurseForge
        env:
          CURSEFORGE_API_KEY: ${{ secrets.CURSEFORGE_API_KEY }}
        run: |
          curl -s -w "%{http_code}" -o response.json -X POST "https://wow.curseforge.com/api/projects/1062198/upload-file" \
          -H "x-api-token: $CURSEFORGE_API_KEY" \
          -F "file=@$(pwd)/WoWThreads.zip" \
          -F "metadata=@$(pwd)/metadata.json" > curl_output.txt
          
          http_code=$(tail -n1 curl_output.txt)
          content=$(cat response.json)
          
          echo "HTTP Status Code: $http_code"
          echo "Response Content: $content"
          
          if [ "$http_code" -ne 200 ]; then
            echo "Upload failed with status code $http_code"
            cat response.json  # Print response content for debugging
            exit 1
          else
            echo "Upload succeeded"
            cat response.json  # Print response content for verification
          fi
